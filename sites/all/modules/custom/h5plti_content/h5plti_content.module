<?php

/**
 * H5PLTI Content.
 */

define('H5P_VIDEO_TEMPLATE_NID', 3);

/**
 * Implements hook_views_api().
 */
function h5plti_content_views_api($module = NULL, $api = NULL) {
  return array(
    'api' => '3.0',
    'path' => drupal_get_path('module', 'h5plti_content'),
    'template path' => drupal_get_path('module', 'h5plti_content'),
  );
}

/**
 * Implements hook_views_pre_render().
 */
function h5plti_content_views_pre_render(&$view) {
  if ($view->name == 'h5p_videos') {
    // Stylize the table.
    $path = drupal_get_path('module', 'h5plti_content');
    drupal_add_css($path . '/css/h5p_videos.css');
  }
}

/**
 * Implements hook_views_query_alter().
 */
function h5plti_content_views_query_alter(&$view, &$query) {
  if ($view->name == 'h5p_videos') {
    // Exclude the template from results.
    foreach ($view->query->where as $key1 => $value1) {
      foreach ($value1['conditions'] as $key2 => $value2) {
        if ($value2['field'] == 'h5p_nodes.content_id' && $value2['value'] == 0) {
          $view->query->where[$key1]['conditions'][$key2]['value'] = H5P_VIDEO_TEMPLATE_NID;
        }
      }
    }
  }
}

/**
 * Implements hook_permission().
 */
function h5plti_content_permission() {
  $items = array();

  $items['view my list with h5p videos'] = array(
    'title' => t('View my list with h5p videos'),
    'description' => t('View the block with list of my h5p videos'),
  );

  $items['add h5p video'] = array(
    'title' => t('Add H5P video'),
    'description' => t('Adding the interactive content with h5p video'),
  );

  $items['edit my own h5p videos'] = array(
    'title' => t('Edit my own h5p videos'),
    'description' => t(''),
  );

  $items['del my own h5p videos'] = array(
    'title' => t('Delete my own h5p videos'),
    'description' => t(''),
  );

  return $items;
}

/**
 * Implements hook_menu().
 */
function h5plti_content_menu() {
  $items = array();

  $items['h5p-video/add'] = array(
    'title' => 'Add H5P video',
    'description' => 'Adding the interactive content with h5p video',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('h5plti_h5p_add_form'),
    'access arguments' => array('add h5p video'),
  );

  return $items;
}

/**
 * Form callback for h5p/add.
 */
function h5plti_h5p_add_form($form, &$form_state) {
  // Copy the h5p-node from template to save.
  if (!isset($form_state['node'])) {
    $already_exists = hp5lti_h5p_check_video_template();
    $form_state['node'] = hp5lti_h5p_get_video_template();
  }

  // Customize the usual node-edit form.
  $form_state['build_info']['args'] = array($form_state['node']);
  form_load_include($form_state, 'inc', 'node', 'node.pages');
  $form = drupal_build_form('h5p_content_node_form', $form_state);
  unset($form['title']['#value']);
  if (!$already_exists) {
    // $form['title']['#default_value'] = '';
  }
  unset($form['json_content']['#value']);
  $form['additional_settings']['#access'] = FALSE;
  $form['revision_information']['#access'] = FALSE;
  $form['author']['#access'] = FALSE;
  $form['options']['#access'] = FALSE;
  $form['field_h5p_video_only']['#access'] = FALSE;
  $form['actions']['submit']['#value'] = t('Add');
  unset($form['actions']['preview']);
  unset($form['actions']['delete']);
  $form['actions']['submit']['#submit'][] = '_h5p_form_submit';
  $form['actions']['submit']['#submit'][] = 'h5peditor_h5p_content_node_form_submit';
  $form['actions']['submit']['#submit'][] = 'h5plti_h5p_add_form_submit';

  return $form;
}

/**
 * Additional submit for h5p/add form.
 */
function h5plti_h5p_add_form_submit($form, &$form_state) {
  hp5lti_h5p_free_video_template();
  $messages = drupal_get_messages();
  drupal_goto('<front>');
}

/**
 * Get a new h5p-video template for this user.
 */
function hp5lti_h5p_get_video_template() {
  // Get the current user wrapper.
  global $user;
  $user_wrapper = entity_metadata_wrapper('user', $user);

  // Check if the template already exists for this user.
  if ($nid = $user_wrapper->field_h5p_video_template_nid->value()) {
    $node = node_load($nid);
    if ($node) {
      $node->revision = FALSE;
      $node->menu = FALSE;
      return $node;
    }
  }

  // Duplicate a new template for this user.
  $node = node_load(H5P_VIDEO_TEMPLATE_NID);
  $node->is_new = TRUE;
  $node->title = t('New H5P video');
  unset($node->nid);
  unset($node->vid);
  $node->uid = $user->uid;
  node_save($node);
  $node->revision = FALSE;
  $node->menu = FALSE;
  $user_wrapper->field_h5p_video_template_nid->set($node->nid);
  $user_wrapper->save();

  return $node;
}

/**
 * Check if the tempate already exists for the user.
 */
function hp5lti_h5p_check_video_template() {
  // Get the current user wrapper.
  global $user;
  $user_wrapper = entity_metadata_wrapper('user', $user);

  // Check if the template already exists for this user.
  if ($nid = $user_wrapper->field_h5p_video_template_nid->value()) {
    $node = node_load($nid);
    if ($node) {
      return TRUE;
    }
  }

  return FALSE;
}

/**
 * Free the user from the template.
 */
function hp5lti_h5p_free_video_template() {
  global $user;
  $user_wrapper = entity_metadata_wrapper('user', $user);
  $user_wrapper->field_h5p_video_template_nid->set(NULL);
  $user_wrapper->save();
}
